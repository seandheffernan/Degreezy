[
  {
    "Code": "CSCI",
    "Num": 1100,
    "Name": "COMPUTER SCIENCE I",
    "Semester": "Spring",
    "Description": "An introduction to computer programming algorithm design and analysis. Additional topics include basic computer organization; internal representation of scalar and array data; use of top-down design and subprograms to tackle complex problems; abstract data types. Enrichment material as time allows. Interdisciplinary case studies, numerical and nonnumerical applications. Students who have passed CSCI 1200 cannot register for this course.",
    "Pre-Reqs" : [   
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 1190,
    "Name": "BEGINNING PROG FOR ENG",
    "Semester": "Spring",
    "Description": "This course teaches elementary programming concepts using the MATLAB environment for engineering students with little or no prior programming experience. Concepts include variables, looping, and function calls. Students cannot get credit for CSCI 1190 after earning credit for CSCI 1100 or any higher-level CSCI course.",
    "Pre-Reqs" : [ 
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 1200,
    "Name": "DATA STRUCTURES",
    "Semester": "Spring",
    "Description": "Programming concepts: functions, parameter passing, pointers, arrays, strings, structs, classes, templates. Mathematical tools: sets, functions, and relations, order notation, complexity of algorithms, proof by induction. Data structures and their representations: data abstraction and internal representation, sequences, trees, binary search trees, associative structures. Algorithms: searching and sorting, generic algorithms, iterative and recursive algorithms. Methods of testing correctness and measuring performance.",
    "Pre-Reqs" : [
       "COMPUTER SCIENCE I"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 2200,
    "Name": "FOUNDATIONS OF COMPUTER SCI",
    "Semester": "Spring",
    "Description": "This course introduces important mathematical and theoretical tools for computer science, including topics from set theory, combinatorics, and probability theory, and then proceeds to automata theory, the Turing Machine model of computation, and notions of computational complexity. The course will emphasize formal reasoning and proof techniques.",
    "Pre-Reqs" : [
       "DATA STRUCTURES"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 2300,
    "Name": "INTRODUCTION TO ALGORITHMS",
    "Semester": "Spring",
    "Description": "Data structures and algorithms, and the mathematical techniques necessary to design and analyze them. Basic data structures: lists, associative structures, trees. Mathematical techniques for designing algorithms and analyzing worst-case and expected-case algorithm efficiency. Advanced data structures: balanced trees, tries, heaps, priority queues, graphs. Searching, sorting. Algorithm design techniques: dynamic programming, greedy algorithms, divide-and-conquer, backtracking. Example graph, string, geometric, and numeric algorithms.",
    "Pre-Reqs" : [
       "DATA STRUCTURES",
       "FOUNDATIONS OF COMPUTER SCI"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 2500,
    "Name": "COMPUTER ORGANIZATION",
    "Semester": "Spring",
    "Description": "Introduction to computer organization, assembler language, and operating systems. Computer systems organization: processors, memory, I/O. Digital logic: gates, Boolean algebra, digital logic circuits, memory, buses. Microprogramming. Machine level: instruction formats, addressing modes, instruction types, flow of control. Operating systems: virtual memory, virtual I/O instructions, processes, interprocess communication. Numeric representation. Assembler language: the assembly process, macros, linking, loading. Advanced architectures: RISC architectures, parallel architectures.",
    "Pre-Reqs" : [
       "DATA STRUCTURES"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 2600,
    "Name": "PRINCIPLES OF SOFTWARE",
    "Semester": "Spring",
    "Description": "A study of important concepts in software design, implementation, and testing. Topics include specification, abstraction with classes, design principles and patterns, testing, refactoring, the software development process, GUI and event-driven programming, and cloud-based programming. The course also introduces implementation and testing tools, including IDEs, revision control systems, and other frameworks. The overarching goal of the course is for students to learn how to write correct and maintainable software.",
    "Pre-Reqs" : [
       "DATA STRUCTURES",
       "FOUNDATIONS OF COMPUTER SCI"
    ],
    "Co-Reqs" : [
 
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 2960,
    "Name": "RCOS - LARGE GROUP ===REGISTER",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
       "COMPUTER SCIENCE I"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 2960,
    "Name": "RCOS - SMALL GROUP",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
       "COMPUTER SCIENCE I"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 2960,
    "Name": "RCOS - LATE GROUP",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
       "COMPUTER SCIENCE I"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 2960,
    "Name": "RCOS - WORKSHOPS & MENTOR MTGS",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
       "COMPUTER SCIENCE I"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4020,
    "Name": "DESIGN & ANALYSIS OF ALGORITHM",
    "Semester": "Spring",
    "Description": "This course presents fundamental ideas and techniques of modern algorithm design and analysis. After completing this course, students should be able to formally analyze and design efficient algorithms for a variety of computational problems. Topics covered include Greedy Algorithms, Dynamic Programming, Network Flow, NP-Completeness, Linear Programming, Network Algorithms, as well as probabilistic and approximate algorithms.",
    "Pre-Reqs" : [
       "INTRODUCTION TO ALGORITHMS"
    ],
    "Co-Reqs" : [
 
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4150,
    "Name": "INTRO TO ARTIFICIAL INTELLIG",
    "Semester": "Spring",
    "Description": "Topics and techniques of artificial intelligence using the language LISP. Topics include search, knowledge representation, expert systems, theorem proving, natural language interfaces, learning, game playing, and computer vision. Techniques include pattern matching, data-driven programming, substitution rules, frames, heuristic search, transition networks, neural networks, and evolutionary computation. Development of programming proficiency in LISP is emphasized.",
    "Pre-Reqs" : [
       "INTRODUCTION TO ALGORITHMS"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4210,
    "Name": "OPERATING SYSTEMS",
    "Semester": "Spring",
    "Description": "Discussion of various aspects of computer operating systems design and implementation. Topics include I/O programming, concurrent processes and synchronization problems, process management and scheduling of processes, virtual memory management, device management, file systems, deadlock problems, system calls, and interprocess communication. Programming projects are required.",
    "Pre-Reqs" : [
       "INTRODUCTION TO ALGORITHMS",
       "COMPUTER ORGANIZATION"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4260,
    "Name": "GRAPH THEORY",
    "Semester": "Spring",
    "Description": "Fundamental concepts and methods of graph theory and its applications to computing and the social and natural sciences. Topics include graphs as models, representation of graphs, trees, distances, matchings, connectivity, flows in networks, graph colorings, Hamiltonian cycles, traveling salesman problem, planarity. All concepts, methods, and applications are presented through a sequence of exercises and problems, many of which are done with the help of novel software systems for combinatorial computing.",
    "Pre-Reqs" : [
       "COMPUTER SCIENCE I",
       "FOUNDATIONS OF COMPUTER SCIENCE"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4320,
    "Name": "PARALLEL PROGRAMMING",
    "Semester": "Spring",
    "Description": "Techniques and methods for parallel programming: models of parallel machines and programs, efficiency and complexity of parallel algorithms. Paradigms of parallel programming and corresponding extensions to sequential programming languages. Overview of parallel languages and coordination languages and models; programming on networks of workstations. Basic parallel algorithms: elementary computation, matrix multiplication, sorting; sample scientific application.",
    "Pre-Reqs" : [
       "INTRODUCTION TO ALGORITHMS",
       "COMPUTER ORGANIZATION"
    ],
    "Co-Reqs" : [
 
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4380,
    "Name": "DATABASE SYSTEMS",
    "Semester": "Spring",
    "Description": "Discussion of the state of practice in modern database systems, with an emphasis on relational systems. Topics include database design, database system architecture, SQL, normalization techniques, storage structures, query processing, concurrency control, recovery, security, and new directions such as object-oriented and distributed database systems. Students gain hands-on experience with commercial database systems and interface building tools. Programming projects are required.",
    "Pre-Reqs" : [
       "INTRODUCTION TO ALGORITHMS"
    ],
    "Co-Reqs" : [
 
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4400,
    "Name": "XINFORMATICS",
    "Semester": "Spring",
    "Description": "Informatics covers a broad range of disciplines addressing challenges in the explosion of data and information resources. Xinformatics provides commonality for implementations in specific disciplines, e.g. X=astro, geo. Informatics’ theoretical bases are information and computer science, cognitive science, social science, library science, aggregating these studies and adding the practice of information processing, and the engineering of information systems. This course grounds the material that students will learn in discipline areas by coursework and project assignments.",
    "Pre-Reqs" : [
       "DATA STRUCTURES",
       "DATA SCIENCE"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4440,
    "Name": "SOFTWARE DESIGN & DOCUME",
    "Semester": "Spring",
    "Description": "Software system design methodology emphasizing use of object oriented modeling of application domains and of software systems and emphasizing the roles of written and oral communication in software engineering. Project management and software testing. Individual and team projects include specification, software architecture, user interfaces, and documentation of the phases of a project. This is a communication-intensive course.",
    "Pre-Reqs" : [
       "INTRODUCTION TO ALGORITHMS"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4450,
    "Name": "PRINCIPLES OF PROGRAM ANALYSIS",
    "Semester": "Spring",
    "Description": "The goal of this course is to introduce students to program analysis and its many applications in software engineering, particularly in improving software quality and software productivity. Concretely, students who successfully complete this course should be able to: (1) understand and apply program analysis techniques, such as dataflow analysis and type-based analysis; (2) implement program analysis; (3) understand and apply software testing techniques, such as black-box testing and white-box testing; and (4) understand and apply refactoring techniques.",
    "Pre-Reqs" : [
       "PROGRAMMING LANGUAGES"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4540,
    "Name": "GAME DEVELOPMENT II",
    "Semester": "Spring",
    "Description": "This course follows Game Development I. Students work in interdisciplinary teams to create one large-scale 3D game, working from concept to public release. Projects may include games, educational games, serious games and simulations, and interactive artworks, and will focus on creative design, technical execution, and use of game design principles. The course builds on skills and knowledge in previous courses in the GSAS core, including game design, game mechanics, game programming, art, and narrative.",
    "Pre-Reqs" : [
       "GAME DEVELOPMENT I"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4550,
    "Name": "INTERACTIVE VISUALIZATION",
    "Semester": "Spring",
    "Description": "Visualizing data is a key step in understanding many problems. This course is designed to introduce students to methods of visualizing many different types of data, such as images, three-dimensional surfaces, flow fields, and medical data. Both existing visualization software and program custom visualizations using C++ and OpenGL will be used. Course activities include discussion of recent and classic research papers, weekly homework assignments, in-class critiques of visualization artifacts, and a final project to explore creative uses of these techniques. This is a communication-intensive course.",
    "Pre-Reqs" : [
       "INTRODUCTION TO ALGORITHMS",
       "PRINCIPLES OF SOFTWARE"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4800,
    "Name": "NUMERICAL COMPUTING",
    "Semester": "Spring",
    "Description": "A survey of numerical methods for scientific and engineering problems. Topics include numerical solution of linear and nonlinear algebraic equations, interpolation and least squares approximations, numerical integration and differentiation, eigenvalue problems, and an introduction to the numerical solution of ordinary differential equations. Emphasis is placed on efficient computational procedures including the use of library and student written procedures using high-level software such as MATLAB.",
    "Pre-Reqs" : [
       "COMPUTER SCIENCE I",
       "MULTI VARIABLE CALCULUS"
    ],
    "Co-Reqs" : [
       "INTRODUCTION TO DIFFERENTIAL EQUATIONS"
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4820,
    "Name": "INTRO TO NUM METH FOR DIFF EQ",
    "Semester": "Spring",
    "Description": "Derivation, analysis, and use of computational procedures for solving differential equations. Topics covered include ordinary differential equations (both initial value and boundary value problems) and partial differential equations. Runge-Kutta and multistep methods for initial value problems. Finite difference methods for partial differential equations including techniques for heat conduction, wave propagation, and potential problems. Basic convergence and stability theory.",
    "Pre-Reqs" : [
       "NUMERICAL COMPUTING"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4961,
    "Name": "COGNITIVE MODELING",
    "Semester": "Spring",
    "Description": "Recent advances in Cognitive Science, Computer Science and Mathematics, have resulted in the ability to develop computer programs that implement Probabilistic Cognitive Models (PCMs). The cognitive models that this course covers are based on approximate Bayesian Inference implemented by Markov Chain Monte Carlo and Variational techniques that have made this approach tractable. The objective of this course is to enable the student to develop models of cognition in a Bayesian framework.",
    "Pre-Reqs" : [
       "INTRODUCTION TO ALGORITHMS"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4962,
    "Name": "SOFTWARE VERIFICATION",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4964,
    "Name": "GRAPH MINING",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4967,
    "Name": "ECONOMICS AND COMPUTATION",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4969,
    "Name": "MACH LEARNING BIOINFORMATICS",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 4976,
    "Name": "WEB SCIENCE SYSTEMS DEV",
    "Semester": "Spring",
    "Description": "Building on the technology covered in Web Systems Development, students will be exposed to current technologies, frameworks, and practices in the area of Web development. Types of topics included will be HTML5/CSS3, API’s for data, Ruby on Rails, node.js, MongoDB, PHP, and RDF. Methodology to be explored will be application design, software versioning, and team development. Lab intensive, this course is intended to complete a foundation for the advanced courses in Data Science and Advanced Web Science.",
    "Pre-Reqs" : [
       "WEB SYSTEMS DEVELOPMENT"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6360,
    "Name": "PARALLEL COMPUTING",
    "Semester": "Spring",
    "Description": "A survey of fundamental issues in design of efficient programs for parallel computers. The topics discussed include models of parallel machines and programs, efficiency of parallel algorithms, programming styles for shared memory, message passing, data parallelism, and using MPI in scientific parallel programs. Parallel programming project required.",
    "Pre-Reqs" : [
       "OPERATING SYSTEMS"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6400,
    "Name": "XINFORMATICS",
    "Semester": "Spring",
    "Description": "Informatics covers a broad range of disciplines addressing challenges in the explosion of data and information resources. Xinformatics provides commonality for implementations in specific disciplines, e.g. X=astro, geo. Informatics’ theoretical bases are information and computer science, cognitive science, social science, library science, aggregating these studies and adding the practice of information processing, and the engineering of information systems. This course grounds the material that students will learn in discipline areas by coursework and project assignments.",
    "Pre-Reqs" : [
       "DATA STRUCTURES",
       "DATA SCIENCE"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6450,
    "Name": "PRINCIPLES OF PROGRAM ANALYSIS",
    "Semester": "Spring",
    "Description": "The goal of this course is to introduce students to program analysis and its many applications in software engineering, particularly in improving software quality and software productivity. Concretely, students who successfully complete this course should be able to: (1) understand and apply program analysis techniques, such as dataflow analysis and type-based analysis; (2) implement program analysis; (3) understand and apply software testing techniques, such as black-box testing and white-box testing; and (4) understand and apply refactoring techniques.",
    "Pre-Reqs" : [
       "PROGRAMMING LANGUAGES"
    ],
    "Co-Reqs" : [
 
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6550,
    "Name": "INTERACTIVE VISUALIZATION",
    "Semester": "Spring",
    "Description": "Visualizing data is a key step in understanding many problems. This course is designed to introduce students to methods of visualizing many different types of data, such as images, three-dimensional surfaces, flow fields, and medical data. Both existing visualization software and program custom visualizations using C++ and OpenGL will be used. Course activities include discussion of recent and classic research papers, weekly homework assignments, in-class critiques of visualization artifacts, and a final project to explore creative uses of these techniques. This is a communication-intensive course.",
    "Pre-Reqs" : [
       "INTRODUCTION TO ALGORITHMS",
       "PRINCIPLES OF SOFTWARE"
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6840,
    "Name": "NUMERICAL SOLUTION OF PARTIAL DIFFERENTIAL EQUATIONS",
    "Semester": "Spring",
    "Description": "Numerical methods and analysis for linear and nonlinear PDEs with applications from heat conduction, wave propagation, solid and fluid mechanics, and other areas. Basic concepts of stability and convergence (Lax equivalence theorem, CFL condition, energy methods). Methods for parabolic problems (finite differences, method of lines, ADI, operator splitting), methods for hyperbolic problems (vector systems and characteristics, dissipation and dispersion, shocks capturing and tracking schemes), methods for elliptic problems (finite difference and finite volume methods).",
    "Pre-Reqs" : [
       
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6900,
    "Name": "COMPUTER SCIENCE COLLOQUIUM",
    "Semester": "Spring",
    "Description": "Presentation of current developments in computer science. Reports by students.",
    "Pre-Reqs" : [
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6960,
    "Name": "COMPUTER SCIENCE SEMINAR",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6961,
    "Name": "ADV DISTRIBUTED SYSTEM SEMINAR",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6962,
    "Name": "SOFTWARE VERIFICATION",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [      
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6964,
    "Name": "GRAPH MINING",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [      
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6967,
    "Name": "ECONOMICS AND COMPUTATION",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [      
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6969,
    "Name": "MACH LEARNING BIOINFORMATICS",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [      
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6970,
    "Name": "PROFESSIONAL PROJECT",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [      
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6980,
    "Name": "MASTER'S PROJECT",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [      
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 6990,
    "Name": "MASTER'S THESIS",
    "Semester": "Spring",
    "Description": "",
    "Pre-Reqs" : [      
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  },
  {
    "Code": "CSCI",
    "Num": 9990,
    "Name": "DISSERTATION",
    "Semester": "Spring",
    "Description": "Active participation in research, under the supervision of a faculty adviser, leading to a doctoral dissertation. Grades of IP are assigned until the dissertation has been publicly defended, approved by the doctoral committee, and accepted by the Office of Graduate Education to be archived in a standard format in the library. Grades will then be listed as S.",
    "Pre-Reqs" : [      
    ],
    "Co-Reqs" : [
    ],
    "Major-Restriction" : ""
  }
 ]